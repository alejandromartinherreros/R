#+TITLE:     Estadística básica con R

#+SETUPFILE: config.org
#+OPTIONS: H:2
#+PROPERTY: header-args :results output :exports both :session R:stats :tangle yes :comments org
#+LATEX_HEADER: \AtBeginSection[]{\begin{frame}[plain]\tableofcontents[currentsection,sectionstyle=show/shaded]\end{frame}}

* Conjunto de datos

** Conjunto de datos: swiss
Standardized fertility measure and socio-economic indicators for
each of 47 French-speaking provinces of Switzerland at
about 1888. 6 variables in percent [0, 100]:

- *Fertility*:         Ig, ‘common standardized fertility measure’      
- *Agriculture*:       % of males involved in agriculture as occupation 
- *Examination*:       % draftees receiving highest mark on army examination 
- *Education*:         % education beyond primary school for draftees. 
- *Catholic*:          % ‘catholic’ (as opposed to ‘protestant’).      
- *Infant.Mortality*:  live births who live less than 1year.           
    
** Conjunto de datos: swiss

#+begin_src R
data(swiss)

summary(swiss)
#+end_src

** 


#+begin_src R :results output graphics :file figs/splomSwiss.png
library(lattice)
splom(swiss, pscale=0, type=c('p', 'smooth'),
      groups=swiss$Catholic > 50, xlab='')
#+end_src

#+ATTR_LATEX: :height 0.5\textheight
#+RESULTS:
[[file:figs/splomSwiss.png]]

* Estadística Univariante

** Resumen de  información
#+begin_src R
summary(swiss)
#+end_src

** Media
#+begin_src R 
mean(swiss$Fertility)
#+end_src

#+begin_src R 
colMeans(swiss)
#+end_src

** Desviación Estándar

#+begin_src R 
sd(swiss$Fertility)
#+end_src

#+begin_src R 
sapply(swiss, sd)
#+end_src

** Otras

#+begin_src R
median(swiss$Fertility)
#+end_src

#+begin_src R
mad(swiss$Fertility)
#+end_src

#+begin_src R
IQR(swiss$Fertility)
#+end_src

* Generar datos aleatorios

** Distribuciones disponibles
*** 								      :BMCOL:
    :PROPERTIES:
    :BEAMER_col: .5
    :END:
- beta =beta=
- binomial =binom=
- Cauchy =cauchy=
- chi-squared =chisq=
- exponential =exp=
- F =f=
- gamma =gamma=
- geometric =geom=
- hypergeometric =hyper=
*** 								      :BMCOL:
    :PROPERTIES:
    :BEAMER_col: .5
    :END:
- log-normal =lnorm=
- logistic =logis=
- negative =binomial=
- normal =norm=
- Poisson =pois=
- signed rank =signrank=
- Student’s t =t=
- uniform =unif=
- Weibull =weibull=
- Wilcoxon =wilcox=

** Densidad, CDF, Cuantiles, y Números aleatorios

- =dxxx= :: función de densidad de probabilidad
- =pxxx= :: función acumulada de probabilidad
- =qxxx= :: cuantiles
- =rxxx= :: generación de números aleatorios

** Distribución Normal
#+begin_src R 
rnorm(10, mean = 1, sd = .4)
#+end_src

#+begin_src R :results output graphics :file figs/rnorm.png
hist(rnorm(1e6, mean = 1, sd = .4))
#+end_src

#+ATTR_LATEX: :height 0.6\textheight
#+RESULTS:
[[file:figs/rnorm.png]]

** Distribución Normal
#+begin_src R :results output graphics :file figs/dnorm.png
x <- seq( -5, 5, by =.01)
plot(x, dnorm(x), type = 'l')
#+end_src

#+ATTR_LATEX: :height 0.6\textheight
#+RESULTS:
[[file:figs/dnorm.png]]

** Distribución Uniforme

#+begin_src R 
runif(10, min=-3, max=3)
#+end_src


#+begin_src R :results output graphics :file figs/runif.png
hist(runif(1e6, min = -3, max = 3))
#+end_src

#+ATTR_LATEX: :height 0.6\textheight
#+RESULTS:
[[file:figs/runif.png]]

** Distribución de Weibull
#+begin_src R 
rweibull(n=10, shape = 3, scale = 2)
#+end_src


#+begin_src R :results output graphics :file figs/rweibull.png
hist(rweibull(1e6, shape = 3, scale = 2))
#+end_src

#+ATTR_LATEX: :height 0.6\textheight
#+RESULTS:
[[file:figs/rweibull.png]]

** Muestreo aleatorio

#+begin_src R 
x <- seq(1, 100, length = 10)
x
#+end_src

- Sin reemplazo
#+begin_src R 
sample(x)
#+end_src

#+begin_src R 
sample(x, 5)
#+end_src

- Con reemplazo
#+begin_src R 
sample(x, 5, replace = TRUE)
#+end_src


* Tests de Hipótesis
** Para muestra única

- t de Student
#+begin_src R 
t.test(swiss$Fertility, mu=70)
#+end_src

- Wilcoxon (no paramétrico)
#+begin_src R 
wilcox.test(swiss$Fertility, mu=70)
#+end_src

** Para muestras pareadas
#+begin_src R 
Religion <- ifelse(swiss$Catholic > 50,
                   'Catholic', 'Protestant')
#+end_src

- t de Student
#+begin_src R 
t.test(Fertility ~ Religion, data=swiss)
#+end_src

** Para muestras pareadas
- Wilcoxon
#+begin_src R 
wilcox.test(Fertility ~ Religion, data=swiss)
#+end_src

* Regresión lineal

** Fertilidad y educación
#+begin_src R
lmFertEdu <- lm(Fertility ~ Education,
              data = swiss)
summary(lmFertEdu)
#+end_src

** Fertilidad y educación
#+begin_src R
coef(lmFertEdu)
#+end_src

#+begin_src R
fitted.values(lmFertEdu)
#+end_src

** Fertilidad y educación
#+begin_src R
residuals(lmFertEdu)
#+end_src

** Fertilidad y educación
#+begin_src R :results output graphics :file figs/lmFertEdu.png
plot(lmFertEdu, which = 1)
#+end_src

#+ATTR_LATEX: :height 0.85\textheight
#+RESULTS:
[[file:figs/lmFertEdu.png]]



** Fertilidad, educación y religión
#+begin_src R
lmFertEduCat <- lm(Fertility ~ Education + Catholic,
                   data = swiss)
summary(lmFertEduCat)
#+end_src
   
** Lo mismo con =update=
#+begin_src R
lmFertEduCat <- update(lmFertEdu, . ~ . + Catholic,
                       data = swiss)
summary(lmFertEduCat)
#+end_src


** Fertilidad, educación, religión y agricultura
#+begin_src R
lmFertEduCatAgr <- lm(Fertility ~ Education + Catholic + Agriculture,
                      data = swiss)
summary(lmFertEduCatAgr)
#+end_src


** Lo mismo con =update=
#+begin_src R
lmFertEduCatAgr <- update(lmFertEduCat,
                          . ~ . + Agriculture,
                          data = swiss)
summary(lmFertEduCatAgr)
#+end_src

** Lo mismo con =update=
#+begin_src R
lmFertEduCatAgr <- update(lmFertEdu,
                          . ~ . + Catholic + Agriculture,
                          data = swiss)
summary(lmFertEduCatAgr)
#+end_src

** Comparamos modelos con =anova=
#+begin_src R
anova(lmFertEdu, lmFertEduCat, lmFertEduCatAgr)
#+end_src

** Fertilidad contra todo
#+begin_src R
lmFert <- lm(Fertility ~ ., data=swiss)

summary(lmFert)
#+end_src

** Elegir un modelo con =anova=
#+begin_src R
anova(lmFert)
#+end_src

** Elegir un modelo con =step=
#+begin_src R
stepFert <- step(lmFert)
#+end_src
** Elegir un modelo
#+begin_src R 
summary(stepFert)
#+end_src

** Elegir un modelo
#+begin_src R
stepFert$anova
#+end_src
